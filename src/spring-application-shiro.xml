<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description>Shiro 配置</description>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 
			loginUrl代表shiro系统的登录url，也就是说如果访问需要认证的页面，则会跳转至此url
			unauthorizedUrl未授权页面
			successUrl认证成功默认页面
		 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/portal" />
		<property name="unauthorizedUrl" value="/login.jsp" />
		<property name="filters">
			<util:map>
				<entry key="authc">
					<bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
				</entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<!-- anon代表匿名可以访问的,authc代表登录后才能看到的 -->
			<value>
				/login.jsp = anon
				/login.do = anon  
				/shiro/login.do = anon
<!--                 /** = authc   -->
	            /user/** = anon
	            /admin/**=authc,roles[admin]  <!-- 针对角色授权 -->
	            <!-- 
	            /role/edit/* = perms[role:editUSER]   
	            /role/save = perms[role:edit]   
	            /role/list = perms[role:view]   
	             -->
	             <!-- 
	            	/login.jsp = anon
				    /admin/admin.jsp = authc,roles[admin]
				    /guest/** = authc,roles[guest]
					当用户进入admin.jsp页面时,一定要认证成功的（authc）,
					还要角色是admin（roles[admin]）,符合这两个条件才能成功进入admin.jsp页面,
					相似的，进入guest包里的所有页面,都要认证成功并且角色是guest
	            	
	             -->
			</value>
		</property>
	</bean>
	
	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="monitorRealm" class="com.br.ott.client.shiro.service.ShiroRealm" />
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义realm -->
		<property name="sessionMode" value="native"/>
		<property name="realm" ref="monitorRealm" />
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
    
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"></property>
	</bean>
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="sessionDAO"/>
	    <property name="globalSessionTimeout" value="18000000"/>
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	</bean>
	
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean> 

	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: AOP式方法级权限检查   这两个类主要用于注解 -->
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" /> 
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" /> 
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean> 
</beans>