<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.br.ott.client.select.mapper.DramaPositionMapper">

	<resultMap id="DramaPositionMap" type="DramaPosition" > 
		<id property="id" column="id"></id>
		<result property="name" column="name"></result>
		<result property="code" column="code"></result>
		<result property="status" column="status"></result>
		<result property="sort" column="sort"></result>
		<result property="type" column="type"></result>
		
	</resultMap>  
	
	<select id="findDramaPositionByPage" resultMap="DramaPositionMap">
		select c.id, c.name,  c.code, c.status ,c.sort,c.type
		from ott_drama_position c
		<where>
		        1 = 1
			<if test="code !='' and code !=null">
				and c.code = #{code,jdbcType=VARCHAR}
			</if>
			<if test="name !='' and name !=null">
				and c.name LIKE CONCAT(CONCAT('%', #{name}),'%')
			</if>
			<if test="type !='' and type !=null">
				and c.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="status !='' and status !=null">
				and c.status = #{status,jdbcType=VARCHAR}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn !=''">
			order by ${orderColumn} 
		</if>
		<if test="orderColumn == null or orderColumn ==''">
			order by c.id desc
		</if>
	</select>
	
	<select id="getCountDramaPosition" resultType="int">
		select count(1)
		from ott_drama_position c
		<where>
			    1 = 1
			<if test="code !='' and code !=null">
				and c.code = #{code,jdbcType=VARCHAR}
			</if>
			<if test="type !='' and type !=null">
				and c.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="name !='' and name !=null">
				and c.name LIKE CONCAT(CONCAT('%', #{name}),'%')
			</if>
			<if test="status !='' and status !=null">
				and c.status = #{status,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="getDramaPositionById" resultType="DramaPosition">
		select id,name,code,status,type,sort from ott_drama_position where id=#{id, jdbcType=INTEGER}
	</select>
	
	<update id="updateDramaPositionStatus" >
		update ott_drama_position set status =#{status,jdbcType=VARCHAR}
		where id=#{id, jdbcType=INTEGER}
	</update>
	
	<insert id="addDramaPosition" parameterType="DramaPosition">
		<selectKey keyProperty="id" resultType="String"  order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
		<![CDATA[ insert into ott_drama_position(name, code, sort,type,status) 
		values(#{name,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{sort,jdbcType=VARCHAR},
			#{type,jdbcType=VARCHAR},
			'1')
		]]>
	</insert> 
	
	<update id="updateDramaPosition">
		update ott_drama_position set name=#{name,jdbcType=VARCHAR},
			code=#{code,jdbcType=VARCHAR},sort=#{sort,jdbcType=VARCHAR}
		where id=#{id, jdbcType=INTEGER}
	</update>
	
	<select id="findDramaPositionByCond" resultMap="DramaPositionMap">
		select id, name, code, status,type,sort
		from ott_drama_position 
		<where>
		        1 = 1
			<if test="code !='' and code !=null">
				and code = #{code,jdbcType=VARCHAR}
			</if>
			<if test="name !='' and name !=null">
				and name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="status !='' and status !=null">
				and status = #{status,jdbcType=VARCHAR}
			</if>
			<if test="type !='' and type !=null">
				and type = #{type,jdbcType=VARCHAR}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn !=''">
			order by ${orderColumn} 
		</if>
		<if test="orderColumn == null or orderColumn ==''">
			order by id desc
		</if>
	</select>
</mapper>